/*! GuideChimp v2.6.2 | Copyright (C) 2020 Labs64 GmbH */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["guideChimpPluginBeacons"] = factory();
	else
		root["guideChimpPluginBeacons"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),
/* 2 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

var _typeof2 = _interopRequireDefault(__webpack_require__(0));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(2));

var _createClass2 = _interopRequireDefault(__webpack_require__(3));

var _get2 = _interopRequireDefault(__webpack_require__(6));

var _inherits2 = _interopRequireDefault(__webpack_require__(8));

var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(10));

var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(4));

var _Beacons2 = _interopRequireDefault(__webpack_require__(12));

__webpack_require__(20);

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

module.exports = function (Class, factory) {
  // eslint-disable-next-line no-param-reassign
  factory.beacons = function (beacons) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    return new ( /*#__PURE__*/function (_Beacons) {
      (0, _inherits2.default)(_class, _Beacons);

      var _super = _createSuper(_class);

      function _class() {
        (0, _classCallCheck2.default)(this, _class);
        return _super.apply(this, arguments);
      }

      (0, _createClass2.default)(_class, [{
        key: "getDataBeacons",
        value: function getDataBeacons(ids) {
          var _this = this;

          var data = (0, _get2.default)((0, _getPrototypeOf2.default)(_class.prototype), "getDataBeacons", this).call(this, ids);
          data.forEach(function (beacon) {
            var id = beacon.id,
                el = beacon.element;
            var tour = '';
            var dataGlobalTourAttrName = "".concat(_this.constructor.getBeaconDataPrefix(), "-tour");
            var dataBeaconTourAttrName = "".concat(_this.constructor.getBeaconDataPrefix(), "-").concat(id, "-tour");

            if (el.attributes[dataGlobalTourAttrName]) {
              var value = el.attributes[dataGlobalTourAttrName].value;
              tour = value;
            }

            if (el.attributes[dataBeaconTourAttrName]) {
              var _value = el.attributes[dataBeaconTourAttrName].value;
              tour = _value;
            }

            if (tour) {
              // eslint-disable-next-line no-param-reassign
              beacon.tour = tour;
            }
          });
          return data;
        }
      }, {
        key: "createBeaconEl",
        value: function createBeaconEl(beacon) {
          var beaconEl = (0, _get2.default)((0, _getPrototypeOf2.default)(_class.prototype), "createBeaconEl", this).call(this, beacon);

          if (beacon.tour) {
            beaconEl.addEventListener('click', function () {
              var guide = null;

              if (typeof beacon.tour === 'string' || Array.isArray(beacon.tour)) {
                guide = new Class(beacon.tour);
              } else if (beacon.tour instanceof Class) {
                guide = beacon.tour;
              } else if ((0, _typeof2.default)(beacon.tour) === 'object') {
                var _beacon$tour = beacon.tour,
                    steps = _beacon$tour.steps,
                    tourOptions = _beacon$tour.options;
                guide = new Class(steps, tourOptions);
              }

              if (guide) {
                guide.start();
              }
            });
          }

          return beaconEl;
        }
      }]);
      return _class;
    }(_Beacons2.default))(beacons, options);
  };
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var superPropBase = __webpack_require__(7);

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(4);

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(9);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(0);

var assertThisInitialized = __webpack_require__(11);

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(1);

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _typeof2 = _interopRequireDefault(__webpack_require__(0));

var _slicedToArray2 = _interopRequireDefault(__webpack_require__(13));

var _defineProperty2 = _interopRequireDefault(__webpack_require__(19));

var _classCallCheck2 = _interopRequireDefault(__webpack_require__(2));

var _createClass2 = _interopRequireDefault(__webpack_require__(3));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

/* eslint-disable class-methods-use-this */

/**
 * Copyright (C) 2020 Labs64 GmbH
 *
 * This source code is licensed under the European Union Public License, version 1.2
 * located in the LICENSE file
 */
// global cache
var cache = new Map();

var Beacons = /*#__PURE__*/function () {
  function Beacons(beacons) {
    var _this = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    (0, _classCallCheck2.default)(this, Beacons);
    this.beacons = [];
    this.options = {}; // observers

    this.observers = {};

    if (typeof ResizeObserver !== 'undefined') {
      this.observers.elementResizeObserver = new ResizeObserver(function () {
        return _this.refresh();
      });
    }

    this.cache = cache;
    this.setOptions(options);
    this.setBeacons(beacons);
    this.init();
  }
  /**
   * Called after construction, this hook allows you to add some extra setup
   * logic without having to override the constructor.
   */


  (0, _createClass2.default)(Beacons, [{
    key: "init",
    value: function init() {}
    /**
     * Default options
     * @return {Object}
     */

  }, {
    key: "setOptions",

    /**
     * Set beacons options
     * @param options
     * @return {this}
     */
    value: function setOptions(options) {
      this.options = _objectSpread(_objectSpread({}, this.constructor.getDefaultOptions()), options);
      return this;
    }
  }, {
    key: "setBeacons",
    value: function setBeacons(beacons) {
      var _this2 = this;

      // cleanup for previous beacons
      this.removeAll();
      this.beacons = !beacons || typeof beacons === 'string' || Array.isArray(beacons) && beacons.every(function (v) {
        return typeof v === 'string';
      }) ? this.getDataBeacons(beacons) : this.getJsBeacons(beacons);

      if (this.beacons.length) {
        this.beacons.forEach(function (beacon) {
          var element = beacon.element;

          if (!element) {
            return;
          }

          var el = _this2.getElement(element);

          var beaconEl = _this2.createBeaconEl(beacon);

          beaconEl.classList.add(_this2.constructor.getHiddenClass());

          if (_this2.constructor.isElementFixed(el)) {
            beaconEl.classList.add(_this2.constructor.getFixedClass());
          }

          var parentEl = !el.parentElement || el.parentElement === document.body ? document.body : el.parentElement;
          parentEl.append(beaconEl);

          _this2.cache.set(beacon, beaconEl);

          _this2.setBeaconPosition(el, beaconEl, beacon); // fire observers


          _this2.observeResizeElement(el);
        });
        this.addOnWindowResizeListener();
      }

      return this;
    }
  }, {
    key: "getBeacons",
    value: function getBeacons() {
      return this.beacons;
    }
  }, {
    key: "getBeacon",
    value: function getBeacon(id, def) {
      var _ref = id && (0, _typeof2.default)(id) === 'object' ? [id] : this.beacons.filter(function (v) {
        return v.id === id;
      }),
          _ref2 = (0, _slicedToArray2.default)(_ref, 1),
          beacon = _ref2[0];

      return beacon || def;
    }
  }, {
    key: "getDataBeacons",
    value: function getDataBeacons(ids) {
      var _this3 = this;

      var beaconsIds = typeof ids === 'string' ? ids.split(',').map(function (v) {
        return v.trim();
      }) : ids;
      var beaconsSelector = ["[".concat(this.constructor.getBeaconDataPrefix(), "]")];

      if (beaconsIds) {
        beaconsSelector = [];
        beaconsIds.forEach(function (id) {
          beaconsSelector.push("[".concat(_this3.constructor.getBeaconDataPrefix(), "*='").concat(id, "']"));
        });
      }

      var beaconsEl = Array.from(document.querySelectorAll(beaconsSelector.join(',')));
      var dataGlobalRegExp = new RegExp("^".concat(this.constructor.getBeaconDataPrefix(), "-([^-]+)$"));
      var beacons = [];
      beaconsEl.forEach(function (el) {
        var beaconsIdsAttrValue = el.attributes[_this3.constructor.getBeaconDataPrefix()].value;

        if (!beaconsIdsAttrValue) {
          return;
        }

        var elBeaconsIds = beaconsIdsAttrValue.split(',');
        elBeaconsIds.forEach(function (id) {
          if (beaconsIds && !beaconsIds.includes(id)) {
            return;
          }

          var globalBeaconAttrs = {};
          var beaconAttrs = {};
          var dataBeaconRegExp = new RegExp("^".concat(_this3.constructor.getBeaconDataPrefix(), "-").concat(id, "-([^-]+)$")); // parse attributes

          for (var j = 0; j < el.attributes.length; j++) {
            var _el$attributes$j = el.attributes[j],
                attrName = _el$attributes$j.name,
                attrValue = _el$attributes$j.value;
            var isGlobalAttr = dataGlobalRegExp.test(attrName);
            var isBeaconAttr = dataBeaconRegExp.test(attrName);

            if (isGlobalAttr) {
              var _attrName$match = attrName.match(dataGlobalRegExp),
                  _attrName$match2 = (0, _slicedToArray2.default)(_attrName$match, 2),
                  shortAttrName = _attrName$match2[1];

              globalBeaconAttrs[shortAttrName] = attrValue;
            } else if (isBeaconAttr) {
              var _attrName$match3 = attrName.match(dataBeaconRegExp),
                  _attrName$match4 = (0, _slicedToArray2.default)(_attrName$match3, 2),
                  _shortAttrName = _attrName$match4[1];

              beaconAttrs[_shortAttrName] = attrValue;
            }
          }

          var beacon = _objectSpread(_objectSpread(_objectSpread({
            id: id,
            position: _this3.options.position
          }, globalBeaconAttrs), beaconAttrs), {}, {
            element: el
          }); // change onclick event


          var onClick = beacon.onclick || beacon.onClick;

          if (onClick) {
            delete beacon.onclick;

            beacon.onClick = function (e) {
              // eslint-disable-next-line no-eval
              var onClickCode = eval(onClick);

              if (typeof onClickCode === 'function') {
                onClickCode.call(e, beacon);
              }
            };
          }

          beacons.push(beacon);
        });
      });
      return beacons;
    }
  }, {
    key: "getJsBeacons",
    value: function getJsBeacons(beacons) {
      // cast to array
      var array = !Array.isArray(beacons) ? [beacons] : beacons;
      return array.map(function (v, i) {
        return _objectSpread(_objectSpread({}, v), {}, {
          id: v.id || i
        });
      });
    }
  }, {
    key: "createBeaconEl",
    value: function createBeaconEl(beacon) {
      var _this4 = this;

      var beaconEl = document.createElement('div');
      var className = beacon.class,
          onClick = beacon.onClick;

      if (className) {
        beaconEl.className = className;
      }

      if (onClick) {
        beaconEl.onclick = function (e) {
          e.stopPropagation();
          onClick.call(_this4, e, beacon);
        };
      }

      beaconEl.classList.add(this.constructor.getBeaconClass());
      return beaconEl;
    }
  }, {
    key: "getElement",
    value: function getElement(selector) {
      return selector instanceof HTMLElement ? selector : document.querySelector(selector);
    }
  }, {
    key: "setBeaconPosition",
    value: function setBeaconPosition(el, beaconEl) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var position = options.position,
          boundary = options.boundary;
      position = position || this.options.position;
      boundary = boundary || this.options.boundary;
      boundary = boundary === 'inner' ? 'inner' : 'outer';
      var elLeft = el.offsetLeft,
          elTop = el.offsetTop,
          elWidth = el.offsetWidth,
          elHeight = el.offsetHeight;
      var beaconStyle = beaconEl.style;

      var _getComputedStyle = getComputedStyle(beaconEl),
          beaconWidth = _getComputedStyle.width,
          beaconHeight = _getComputedStyle.height;

      beaconWidth = parseInt(beaconWidth, 10);
      beaconHeight = parseInt(beaconHeight, 10);
      beaconEl.removeAttribute('data-beacon-position');
      beaconEl.removeAttribute('data-beacon-boundary');
      beaconEl.setAttribute('data-beacon-position', position);
      beaconEl.setAttribute('data-beacon-boundary', boundary);

      switch (position) {
        case 'top-left':
          {
            if (boundary === 'inner') {
              beaconStyle.left = "".concat(elLeft, "px");
              beaconStyle.top = "".concat(elTop, "px");
            } else {
              beaconStyle.left = "".concat(elLeft - beaconWidth, "px");
              beaconStyle.top = "".concat(elTop - beaconHeight, "px");
            }

            break;
          }

        case 'top':
          {
            beaconStyle.left = "".concat(elLeft + (elWidth - beaconWidth) / 2, "px");
            beaconStyle.top = boundary === 'inner' ? "".concat(elTop, "px") : "".concat(elTop - beaconHeight, "px");
            break;
          }

        case 'top-right':
          {
            if (boundary === 'inner') {
              beaconStyle.left = "".concat(elWidth + elLeft - beaconWidth, "px");
              beaconStyle.top = "".concat(elTop, "px");
            } else {
              beaconStyle.left = "".concat(elWidth + elLeft, "px");
              beaconStyle.top = "".concat(elTop - beaconHeight, "px");
            }

            break;
          }

        case 'left':
          {
            beaconStyle.left = boundary === 'inner' ? "".concat(elLeft, "px") : "".concat(elLeft - beaconWidth, "px");
            beaconStyle.top = "".concat(elTop + (elHeight - beaconHeight) / 2, "px");
            break;
          }

        default:
        case 'center':
          {
            beaconEl.setAttribute('data-beacon-position', 'center');
            beaconStyle.left = "".concat(elLeft + (elWidth - beaconWidth) / 2, "px");
            beaconStyle.top = "".concat(elTop + (elHeight - beaconHeight) / 2, "px");
            break;
          }

        case 'right':
          {
            beaconStyle.left = boundary === 'inner' ? "".concat(elLeft + elWidth - beaconWidth, "px") : "".concat(elLeft + elWidth, "px");
            beaconStyle.top = "".concat(elTop + (elHeight - beaconHeight) / 2, "px");
            break;
          }

        case 'bottom-left':
          {
            if (boundary === 'inner') {
              beaconStyle.left = "".concat(elLeft, "px");
              beaconStyle.top = "".concat(elTop + elHeight - beaconHeight, "px");
            } else {
              beaconStyle.left = "".concat(elLeft - beaconWidth, "px");
              beaconStyle.top = "".concat(elTop + elHeight, "px");
            }

            break;
          }

        case 'bottom':
          {
            beaconStyle.left = "".concat(elLeft + (elWidth - beaconWidth) / 2, "px");
            beaconStyle.top = boundary === 'inner' ? "".concat(elTop + elHeight - beaconHeight, "px") : "".concat(elTop + elHeight, "px");
            break;
          }

        case 'bottom-right':
          {
            if (boundary === 'inner') {
              beaconStyle.left = "".concat(elWidth + elLeft - beaconWidth, "px");
              beaconStyle.top = "".concat(elTop + elHeight - beaconHeight, "px");
            } else {
              beaconStyle.left = "".concat(elWidth + elLeft, "px");
              beaconStyle.top = "".concat(elTop + elHeight, "px");
            }

            break;
          }
      }

      return this;
    }
  }, {
    key: "isCanShowBeacon",
    value: function isCanShowBeacon(_ref3) {
      var canShow = _ref3.canShow;

      if (canShow !== undefined) {
        if (!canShow || typeof canShow === 'function' && canShow() === false) {
          return false;
        }
      }

      return true;
    }
  }, {
    key: "showAll",
    value: function showAll() {
      var _this5 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      this.beacons.forEach(function (beacon) {
        _this5.show(beacon, force);
      });
      return this;
    }
  }, {
    key: "show",
    value: function show(id) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var beacon = this.getBeacon(id);

      if (beacon) {
        var beaconEl = this.cache.get(beacon);

        if (beaconEl) {
          if (force || this.isCanShowBeacon(beacon)) {
            beaconEl.classList.remove(this.constructor.getHiddenClass());
          }
        }
      }

      return this;
    }
  }, {
    key: "hideAll",
    value: function hideAll() {
      var _this6 = this;

      this.beacons.forEach(function (beacon) {
        _this6.hide(beacon);
      });
      return this;
    }
  }, {
    key: "hide",
    value: function hide(id) {
      var beacon = this.getBeacon(id);

      if (beacon) {
        var beaconEl = this.cache.get(beacon);

        if (beaconEl) {
          beaconEl.classList.add(this.constructor.getHiddenClass());
        }
      }

      return this;
    }
  }, {
    key: "removeAll",
    value: function removeAll() {
      var _this7 = this;

      this.beacons.forEach(function (beacon) {
        _this7.remove(beacon);
      });
      this.beacons = [];
      this.unobserveResizeAllElements();
      this.removeOnWindowResizeListener();
      return this;
    }
  }, {
    key: "remove",
    value: function remove(id) {
      var beacon = this.getBeacon(id);
      var beaconEl = this.cache.get(beacon);

      if (beaconEl) {
        beaconEl.parentNode.removeChild(beaconEl);
        var beaconIndex = this.beacons.indexOf(beacon);

        if (beaconIndex !== -1) {
          this.beacons.splice(this.beacons.indexOf(beacon), 1);
        }

        this.cache.delete(beacon);
        var el = this.getElement(beacon.element);

        if (el) {
          this.unobserveResizeElement(el);
        }
      }

      if (!this.beacons.length) {
        this.removeOnWindowResizeListener();
      }

      return this;
    }
  }, {
    key: "refresh",
    value: function refresh() {
      var _this8 = this;

      this.beacons.forEach(function (beacon) {
        var element = beacon.element;

        if (!element) {
          return;
        }

        var el = _this8.getElement(element);

        var beaconEl = _this8.cache.get(beacon);

        if (el && beaconEl) {
          _this8.setBeaconPosition(el, beaconEl, beacon);
        }
      });
      return this;
    }
    /**
     * Add window resize event listener
     * @return {this}
     */

  }, {
    key: "addOnWindowResizeListener",
    value: function addOnWindowResizeListener() {
      this.cache.set('onWindowResizeListener', this.getOnWindowResizeListener());
      window.addEventListener('resize', this.cache.get('onWindowResizeListener'), true);
      return this;
    }
    /**
     * Return on window resize event listener function
     * @returns {function}
     */

  }, {
    key: "getOnWindowResizeListener",
    value: function getOnWindowResizeListener() {
      var _this9 = this;

      return function () {
        return _this9.refresh();
      };
    }
    /**
     * Remove window resize event listener
     * @return {this}
     */

  }, {
    key: "removeOnWindowResizeListener",
    value: function removeOnWindowResizeListener() {
      if (this.cache.has('onWindowResizeListener')) {
        window.removeEventListener('resize', this.cache.get('onWindowResizeListener'), true);
        this.cache.delete('onWindowResizeListener');
      }

      return this;
    }
    /**
     * Observe resize step element
     * @return {this}
     */

  }, {
    key: "observeResizeElement",
    value: function observeResizeElement(el) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        box: 'border-box'
      };
      var observer = this.observers.elementResizeObserver;

      if (observer) {
        observer.observe(el, options);
      }

      return this;
    }
    /**
     * Unobserve resize step element
     * @param el
     * @return {this}
     */

  }, {
    key: "unobserveResizeElement",
    value: function unobserveResizeElement(el) {
      var observer = this.observers.elementResizeObserver;

      if (observer) {
        observer.unobserve(el);
      }

      return this;
    }
    /**
     * Unobserve all resize steps elements
     * @return {this}
     */

  }, {
    key: "unobserveResizeAllElements",
    value: function unobserveResizeAllElements() {
      var observer = this.observers.elementResizeObserver;

      if (observer) {
        observer.disconnect();
      }

      return this;
    }
  }], [{
    key: "getDefaultOptions",
    value: function getDefaultOptions() {
      return {
        position: 'center',
        boundary: 'inner'
      };
    }
  }, {
    key: "getBeaconClass",
    value: function getBeaconClass() {
      return 'gc-beacon';
    }
  }, {
    key: "getFixedClass",
    value: function getFixedClass() {
      return 'gc-beacon-fixed';
    }
  }, {
    key: "getHiddenClass",
    value: function getHiddenClass() {
      return 'gc-beacon-hidden';
    }
  }, {
    key: "getBeaconDataPrefix",
    value: function getBeaconDataPrefix() {
      return 'data-beacon';
    }
    /**
     * Check if el or his parent has fixed position
     * @param el
     * @return {boolean}
     */

  }, {
    key: "isElementFixed",
    value: function isElementFixed(el) {
      var parentNode = el.parentNode;

      if (!parentNode || parentNode.nodeName === 'HTML') {
        return false;
      }

      var elStyle = getComputedStyle(el);

      if (elStyle.getPropertyValue('position') === 'fixed') {
        return true;
      }

      return this.isElementFixed(parentNode);
    }
  }]);
  return Beacons;
}();

exports.default = Beacons;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(14);

var iterableToArrayLimit = __webpack_require__(15);

var unsupportedIterableToArray = __webpack_require__(16);

var nonIterableRest = __webpack_require__(18);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),
/* 14 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(17);

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })
/******/ ]);
});
//# sourceMappingURL=beacons.js.map